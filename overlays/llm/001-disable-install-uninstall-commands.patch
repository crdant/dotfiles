diff --git a/llm/cli.py b/llm/cli.py
index 5d53e74..73ce7b9 100644
--- a/llm/cli.py
+++ b/llm/cli.py
@@ -2869,58 +2869,6 @@ def display_truncated(text):
         return text
 
 
-@cli.command()
-@click.argument("packages", nargs=-1, required=False)
-@click.option(
-    "-U", "--upgrade", is_flag=True, help="Upgrade packages to latest version"
-)
-@click.option(
-    "-e",
-    "--editable",
-    help="Install a project in editable mode from this path",
-)
-@click.option(
-    "--force-reinstall",
-    is_flag=True,
-    help="Reinstall all packages even if they are already up-to-date",
-)
-@click.option(
-    "--no-cache-dir",
-    is_flag=True,
-    help="Disable the cache",
-)
-@click.option(
-    "--pre",
-    is_flag=True,
-    help="Include pre-release and development versions",
-)
-def install(packages, upgrade, editable, force_reinstall, no_cache_dir, pre):
-    """Install packages from PyPI into the same environment as LLM"""
-    args = ["pip", "install"]
-    if upgrade:
-        args += ["--upgrade"]
-    if editable:
-        args += ["--editable", editable]
-    if force_reinstall:
-        args += ["--force-reinstall"]
-    if no_cache_dir:
-        args += ["--no-cache-dir"]
-    if pre:
-        args += ["--pre"]
-    args += list(packages)
-    sys.argv = args
-    run_module("pip", run_name="__main__")
-
-
-@cli.command()
-@click.argument("packages", nargs=-1, required=True)
-@click.option("-y", "--yes", is_flag=True, help="Don't ask for confirmation")
-def uninstall(packages, yes):
-    """Uninstall Python packages from the LLM environment"""
-    sys.argv = ["pip", "uninstall"] + list(packages) + (["-y"] if yes else [])
-    run_module("pip", run_name="__main__")
-
-
 @cli.command()
 @click.argument("collection", required=False)
 @click.argument("id", required=False)

#!/usr/bin/env bash

create_dns_location () {
  location="${1}"
  shift

  if ! sudo networksetup -switchtolocation "${location}" 2>&1 >/dev/null ; then
    sudo networksetup -createlocation "${location}" populate 2>&1 >/dev/null 
  fi
  sudo networksetup -switchtolocation "${location}" 2>&1 >/dev/null
  sudo networksetup -setdnsservers Wi-Fi $@
}

create_dns_location "Home DNS" 10.13.6.253 10.13.6.254
create_dns_location "Google DNS" 8.8.8.8 8.8.4.4
create_dns_location "Cloudflare DNS" 1.1.1.1 1.0.0.1
create_dns_location "Quad9 DNS" 9.9.9.9 149.112.112.112
create_dns_location "Tailscale DNS" 100.85.25.21
sudo networksetup -switchtolocation "Automatic" 2>&1 >/dev/null
sleep 10

# put dotfile symbolic links into place with stow, installing if it's not
# already installed
if ! command -v stow >/dev/null 2>&1 ; then 
  brew install stow
fi

# kind of a hack, but before we stow we need to make sure that hardlinks we 
# created in the past are not in the way
find ${HOME}/Library/Colors -type f -links +1 -exec unlink {} \;
find ${HOME}/Library/Preferences -type f -links +1 -exec unlink {} \;

# set up the link farm for non-secret files
stow --target ${HOME} --dir ${HOME}/.dotfiles/files $(ls ${HOME}/.dotfiles/files)

# gpg provides the encryption, so make sure it's installed
if ! command -v gpg >/dev/null 2>&1 ; then 
  brew install gnupg
fi

# the helper script for encryption/decryption is written in python and
# has some depedencies, make sure they're available
pip3 install -r ${HOME}/.dotfiles/requirements.txt

# decrypt the sensitive files
SECRETS_DIR=${HOME}/.dotfiles/secrets
${HOME}/.dotfiles/bin/secrets decrypt --all

# set up the link farm for sensitive files
stow --no-folding --ignore '.*\.enc' --target ${HOME} --dir ${HOME}/.dotfiles/secrets $(ls ${HOME}/.dotfiles/secrets) 

# make sure the SSH config directory exists with appropriate permissions
if [ ! -d ${HOME}/.ssh ] ; then
    mkdir ${HOME}/.ssh
fi
chmod 700 ${HOME}/.ssh

# install oh-my-zsh
if [ -z "${ZSH}" ] ; then
  ZSH=${HOME}/.config/oh-my-zsh 
fi 

if [ -d "${ZSH}" ] ; then
  rm -rf ${ZSH}
fi
ZSH=${ZSH} sh -c "$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)" "" --unattended --keep-zshrc

# use my customizations to oh-my-zsh
ZSH_CUSTOM=${HOME}/workspace/oh-my-zsh-custom
rm -rf ${ZSH_CUSTOM} 2>/dev/null
git clone https://github.com/crdant/oh-my-zsh-custom.git ${ZSH_CUSTOM}

# setup some directories
mkdir -p ${HOME}/sandbox
mkdir -p ${HOME}/workspace
mkdir -p ${HOME}/workspace/learning
mkdir -p ${HOME}/workspace/learning/exercism

# follow the LSB for some home-level content
mkdir -p ${HOME}/bin
mkdir -p ${HOME}/etc
mkdir -p ${HOME}/share

# make sure I can work with dotfiles easily
unlink ${HOME}/workspace/dotfiles
ln -sf ${HOME}/.dotfiles ${HOME}/workspace/dotfiles

# MacOS preferences and customizations snagged from Mathias Bynensat
# and Pivotal's workstation setup

# Increase window resize speed for Cocoa applications
defaults write NSGlobalDomain NSWindowResizeTime -float 0.001

# Expand save panel by default
defaults write NSGlobalDomain NSNavPanelExpandedStateForSaveMode -bool true
defaults write NSGlobalDomain NSNavPanelExpandedStateForSaveMode2 -bool true

# Expand print panel by default
defaults write NSGlobalDomain PMPrintingExpandedStateForPrint -bool true
defaults write NSGlobalDomain PMPrintingExpandedStateForPrint2 -bool true

# Save to disk (not to iCloud) by default
defaults write NSGlobalDomain NSDocumentSaveNewDocumentsToCloud -bool false

# Automatically quit printer app once the print jobs complete
defaults write com.apple.print.PrintingPrefs "Quit When Finished" -bool true

# Reveal IP address, hostname, OS version, etc. when clicking the clock
# in the login window
sudo defaults write /Library/Preferences/com.apple.loginwindow AdminHostInfo HostName

# set finder to display full path in title bar
defaults write com.apple.finder '_FXShowPosixPathInTitle' -bool true

# enable text selection in Quicklook
defaults write com.apple.finder QLEnableTextSelection -bool true

# Set a blazingly fast keyboard repeat rate
defaults write NSGlobalDomain KeyRepeat -int 1
defaults write NSGlobalDomain InitialKeyRepeat -int 10

# Enable lid wakeup
sudo pmset -a lidwake 1

# Restart automatically on power loss
sudo pmset -a autorestart 1

# Sleep the display after 5 minutes
sudo pmset -a displaysleep 5

# Disable machine sleep while charging
sudo pmset -c sleep 0

# set display sleep to 2 minutes on batter
sudo pmset -b displaysleep 2

# Set machine sleep to 5 minutes on battery
sudo pmset -b sleep 5

# Require password immediately after sleep or screen saver begins
defaults write com.apple.screensaver askForPassword -int 1
defaults write com.apple.screensaver askForPasswordDelay -int 0

# Save screenshots to the Outbox
defaults write com.apple.screencapture location -string "${HOME}/Documents/Outbox"

# Disable the warning when changing a file extension
defaults write com.apple.finder FXEnableExtensionChangeWarning -bool false

# Enable spring loading for directories
defaults write NSGlobalDomain com.apple.springing.enabled -bool true

# Remove the spring loading delay for directories
defaults write NSGlobalDomain com.apple.springing.delay -float 0

# Avoid creating .DS_Store files on network or USB volumes
defaults write com.apple.desktopservices DSDontWriteNetworkStores -bool true
defaults write com.apple.desktopservices DSDontWriteUSBStores -bool true

# Use column view in all Finder windows by default
# Four-letter codes for the other view modes: `icnv`, `Nslv`, `glyv`
defaults write com.apple.finder FXPreferredViewStyle -string "clmv"


# Show the ~/Library folder
chflags nohidden ~/Library && xattr -d com.apple.finderinfo ~/Library 2>/dev/null

# Show the /Volumes folder
sudo chflags nohidden /Volumes

# Expand the following File Info panes:
# “General”, “Open with”, and “Sharing & Permissions”
defaults write com.apple.finder FXInfoPanesExpanded -dict \
	General -bool true \
	OpenWith -bool true \
	Privileges -bool true

# Enable spring loading for all Dock items
defaults write com.apple.dock enable-spring-load-actions-on-all-items -bool true

# Disable Dashboard
defaults write com.apple.dashboard mcx-disabled -bool true

# Don’t show Dashboard as a Space
defaults write com.apple.dock dashboard-in-overlay -bool true

# Don’t automatically rearrange Spaces based on most recent use
defaults write com.apple.dock mru-spaces -bool false

# Don’t show recent applications in Dock
defaults write com.apple.dock show-recents -bool false

# Prevent Safari from opening ‘safe’ files automatically after downloading
defaults write com.apple.Safari AutoOpenSafeDownloads -bool false

# Enable Safari’s debug menu
defaults write com.apple.Safari IncludeInternalDebugMenu -bool true

# Make Safari’s search banners default to Contains instead of Starts With
defaults write com.apple.Safari FindOnPageMatchesWordStartsOnly -bool false

# Enable the Develop menu and the Web Inspector in Safari
defaults write com.apple.Safari IncludeDevelopMenu -bool true
defaults write com.apple.Safari WebKitDeveloperExtrasEnabledPreferenceKey -bool true
defaults write com.apple.Safari com.apple.Safari.ContentPageGroupIdentifier.WebKit2DeveloperExtrasEnabled -bool true

# Add a context menu item for showing the Web Inspector in web views
defaults write NSGlobalDomain WebKitDeveloperExtras -bool true

# Enable continuous spellchecking
defaults write com.apple.Safari WebContinuousSpellCheckingEnabled -bool true

# Disable AutoFill
defaults write com.apple.Safari AutoFillFromAddressBook -bool false
defaults write com.apple.Safari AutoFillPasswords -bool false
defaults write com.apple.Safari AutoFillCreditCardData -bool false
defaults write com.apple.Safari AutoFillMiscellaneousForms -bool false

# Block pop-up windows
defaults write com.apple.Safari WebKitJavaScriptCanOpenWindowsAutomatically -bool false
defaults write com.apple.Safari com.apple.Safari.ContentPageGroupIdentifier.WebKit2JavaScriptCanOpenWindowsAutomatically -bool false

# Enable “Do Not Track”
defaults write com.apple.Safari SendDoNotTrackHTTPHeader -bool true

# Update extensions automatically
defaults write com.apple.Safari InstallExtensionUpdatesAutomatically -bool true

# Don’t display the annoying prompt when quitting iTerm
defaults write com.googlecode.iterm2 PromptOnQuit -bool false

# Show the main window when launching Activity Monitor
defaults write com.apple.ActivityMonitor OpenMainWindow -bool true

# Visualize CPU usage in the Activity Monitor Dock icon
defaults write com.apple.ActivityMonitor IconType -int 5

# Show all processes in Activity Monitor
defaults write com.apple.ActivityMonitor ShowCategory -int 0

# Sort Activity Monitor results by CPU usage
defaults write com.apple.ActivityMonitor SortColumn -string "CPUUsage"
defaults write com.apple.ActivityMonitor SortDirection -int 0

# Enable the debug menu in Address Book
defaults write com.apple.addressbook ABShowDebugMenu -bool true

# Enable Dashboard dev mode (allows keeping widgets on the desktop)
defaults write com.apple.dashboard devmode -bool true

# Enable the debug menu in iCal (pre-10.8)
defaults write com.apple.iCal IncludeDebugMenu -bool true

# Use plain text mode for new TextEdit documents
defaults write com.apple.TextEdit RichText -int 0
# Open and save files as UTF-8 in TextEdit
defaults write com.apple.TextEdit PlainTextEncoding -int 4
defaults write com.apple.TextEdit PlainTextEncodingForWrite -int 4

# Enable the debug menu in Disk Utility
defaults write com.apple.DiskUtility DUDebugMenuEnabled -bool true
defaults write com.apple.DiskUtility advanced-image-options -bool true

# Auto-play videos when opened with QuickTime Player
defaults write com.apple.QuickTimePlayerX MGPlayMovieOnOpen -bool true

# Enable Debug Menu in the Mac App Store
defaults write com.apple.appstore ShowDebugMenu -bool true

# Enable the automatic update check
defaults write com.apple.SoftwareUpdate AutomaticCheckEnabled -bool true

# Check for software updates daily, not just once per week
defaults write com.apple.SoftwareUpdate ScheduleFrequency -int 1

# Download newly available updates in background
defaults write com.apple.SoftwareUpdate AutomaticDownload -int 1

# Install System data files & security updates
defaults write com.apple.SoftwareUpdate CriticalUpdateInstall -int 1

# Automatically download apps purchased on other Macs
defaults write com.apple.SoftwareUpdate ConfigDataInstall -int 1

# Turn on app auto-update
defaults write com.apple.commerce AutoUpdate -bool true

# Allow the App Store to reboot machine on macOS updates
defaults write com.apple.commerce AutoUpdateRestartRequired -bool true

# Prevent Photos from opening automatically when devices are plugged in
defaults -currentHost write com.apple.ImageCapture disableHotPlug -bool true

# make Calendar more work-friendly
defaults write com.apple.iCal "Default duration in minutes for new event" -int 30
defaults write com.apple.iCal "TimeZone support enabled" 1

# allow Zoom URLs to open in chrome without approval 
defaults write com.google.chrome URLWhitelist -array "zoommtg://*"

# Use `~/Documents/Torrents` to store incomplete downloads
defaults write org.m0k.transmission UseIncompleteDownloadFolder -bool true
defaults write org.m0k.transmission IncompleteDownloadFolder -string "${HOME}/Documents/Torrents"

# Use inbox to store completed downloads
defaults write org.m0k.transmission DownloadLocation "${HOME}/Documents/Inbox"

# Don’t prompt for confirmation before downloading
defaults write org.m0k.transmission DownloadAsk -bool false
defaults write org.m0k.transmission MagnetOpenAsk -bool false

# Don’t prompt for confirmation before removing non-downloading active transfers
defaults write org.m0k.transmission CheckRemoveDownloading -bool true

# Hide the donate message
defaults write org.m0k.transmission WarningDonate -bool false
# Hide the legal disclaimer
defaults write org.m0k.transmission WarningLegal -bool false

# IP block list.
# Source: https://giuliomac.wordpress.com/2014/02/19/best-blocklist-for-transmission/
defaults write org.m0k.transmission BlocklistNew -bool true
defaults write org.m0k.transmission BlocklistURL -string "http://john.bitsurge.net/public/biglist.p2p.gz"
defaults write org.m0k.transmission BlocklistAutoUpdate -bool true

# Randomize port on launch
defaults write org.m0k.transmission RandomPort -bool true

# Enable the hidden ‘Develop’ menu
defaults write com.twitter.twitter-mac ShowDevelopMenu -bool true

# Open links in the background
defaults write com.twitter.twitter-mac openLinksInBackground -bool true
